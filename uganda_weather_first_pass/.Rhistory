setwd('weather/uganda')
# Read in scraped data
dat <- read.csv("uganda_weather.csv")
# PLOT
source("visualization_functions.R")
# Plot for each location
for (i in unique(sort(dat$loc))){
# Set up multi-pane graphics
par(mfrow = c(2,2))
# Plot max temperature
plot_temp(loc = i)
# Add minimum temperature
plot_temp(loc = i,
var = "temp_min",
data = dat,
color = "darkgreen",
add_lines = TRUE,
add_rolling_lines = TRUE,
rolling_days = 14,
add = TRUE)
# Add legend
legend(x = "bottomleft",
col = adjustcolor(c("darkred", "darkgreen"), alpha.f = 0.4),
pch = 16,
cex = 0.7,
lty = 1,
legend = c("Max", "Min"),
bty = "n")
title(main = "Temperature")
# Plot precipitation
plot_rain(loc = i)
title(main = "Precipitation")
# Plot cloud cover
plot_clouds(loc = i)
title(main = "Cloud cover")
# Plot humidity
# maximum
plot_temp(loc = i,
var = "humidity_max",
ylim = c(0,100))
# minimum
plot_temp(loc = i,
var = "humidity_min",
data = dat,
color = "darkgreen",
add_lines = TRUE,
add_rolling_lines = TRUE,
rolling_days = 14,
add = TRUE)
# Add title
title(main = "Humidity")
# Add legend
legend(x = "bottomleft",
col = adjustcolor(c("darkred", "darkgreen"), alpha.f = 0.4),
pch = 16,
cex = 0.7,
lty = 1,
legend = c("Max", "Min"),
bty = "n")
# Add title
title(main = i,
outer = TRUE,
line = -1)
}
str(dat)
dat <- read.csv("uganda_weather.csv", stringsAsFactors = FALSE)
dat$date <- as.Date(dat$date, format = "%Y-%m-%d")
source("visualization_functions.R")
# Plot for each location
for (i in unique(sort(dat$loc))){
# Set up multi-pane graphics
par(mfrow = c(2,2))
# Plot max temperature
plot_temp(loc = i)
# Add minimum temperature
plot_temp(loc = i,
var = "temp_min",
data = dat,
color = "darkgreen",
add_lines = TRUE,
add_rolling_lines = TRUE,
rolling_days = 14,
add = TRUE)
# Add legend
legend(x = "bottomleft",
col = adjustcolor(c("darkred", "darkgreen"), alpha.f = 0.4),
pch = 16,
cex = 0.7,
lty = 1,
legend = c("Max", "Min"),
bty = "n")
title(main = "Temperature")
# Plot precipitation
plot_rain(loc = i)
title(main = "Precipitation")
# Plot cloud cover
plot_clouds(loc = i)
title(main = "Cloud cover")
# Plot humidity
# maximum
plot_temp(loc = i,
var = "humidity_max",
ylim = c(0,100))
# minimum
plot_temp(loc = i,
var = "humidity_min",
data = dat,
color = "darkgreen",
add_lines = TRUE,
add_rolling_lines = TRUE,
rolling_days = 14,
add = TRUE)
# Add title
title(main = "Humidity")
# Add legend
legend(x = "bottomleft",
col = adjustcolor(c("darkred", "darkgreen"), alpha.f = 0.4),
pch = 16,
cex = 0.7,
lty = 1,
legend = c("Max", "Min"),
bty = "n")
# Add title
title(main = i,
outer = TRUE,
line = -1)
}
setwd('weather/uganda')
# Read in scraped data
dat <- read.csv("uganda_weather.csv", stringsAsFactors = FALSE)
# Clean up
dat$date <- as.Date(dat$date, format = "%Y-%m-%d")
# PLOT
source("visualization_functions.R")
# Plot for each location
for (i in unique(sort(dat$loc))){
# Set up multi-pane graphics
par(mfrow = c(2,2))
# Plot max temperature
plot_temp(loc = i)
# Add minimum temperature
plot_temp(loc = i,
var = "temp_min",
data = dat,
color = "darkgreen",
add_lines = TRUE,
add_rolling_lines = TRUE,
rolling_days = 14,
add = TRUE)
# Add legend
legend(x = "bottomleft",
col = adjustcolor(c("darkred", "darkgreen"), alpha.f = 0.4),
pch = 16,
cex = 0.7,
lty = 1,
legend = c("Max", "Min"),
bty = "n")
title(main = "Temperature")
# Plot precipitation
plot_rain(loc = i)
title(main = "Precipitation")
# Plot cloud cover
plot_clouds(loc = i)
title(main = "Cloud cover")
# Plot humidity
# maximum
plot_temp(loc = i,
var = "humidity_max",
ylim = c(0,100))
# minimum
plot_temp(loc = i,
var = "humidity_min",
data = dat,
color = "darkgreen",
add_lines = TRUE,
add_rolling_lines = TRUE,
rolling_days = 14,
add = TRUE)
# Add title
title(main = "Humidity")
# Add legend
legend(x = "bottomleft",
col = adjustcolor(c("darkred", "darkgreen"), alpha.f = 0.4),
pch = 16,
cex = 0.7,
lty = 1,
legend = c("Max", "Min"),
bty = "n")
# Add title
title(main = i,
outer = TRUE,
line = -1)
}
gadm("UGANDA", level = 2)
library(XML)
require(RCurl)
library(maps)
gadm <- function(country = "USA",
level = 2){
# Get alpha-3 ISO codes from wikipedia, naming the resulting df x
theurl <- "http://en.wikipedia.org/wiki/ISO_3166-1_alpha-3"
tables <- readHTMLTable(theurl, stringsAsFactors = FALSE)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
x2 <- tables[[2]]; x2[nrow(x2)+1,] <- names(x2); names(x2) <- c("code", "country")
x3 <- tables[[3]]; x3[nrow(x3)+1,] <- names(x3); names(x3) <- c("code", "country")
x4 <- tables[[4]]; x4[nrow(x4)+1,] <- names(x4); names(x4) <- c("code", "country")
x <- rbind(x2, x3, x4)
x$country <- toupper(x$country)
# which is the best ISO match with the given country?
best_match <- adist(x = toupper(country),
y = x$country)
best_match <- which.min(best_match)[1]
country_code <- x$code[best_match]
actual_country <- x$country[best_match]
link <- paste0("http://biogeo.ucdavis.edu/data/gadm2/R/",
country_code,
"_adm",
level,
".RData")
if(url.exists(link)){
new_link <- url(link)
} else {
stop("Try a different country or level")
}
actual_country <- gsub(" |,", "", tolower(actual_country))
load(new_link,
envir=environment()) # only loads into function environment
x <- gadm
assign(paste0(actual_country, level), x, envir =  .GlobalEnv)
close(new_link)
print(paste0("Your SpatialPolygonsDataFrame is named ",
actual_country, level))
}
gadm("UGANDA", level = 2)
par(mfrow = c(1,1))
plot(uganda2)
gadm("UGANDA", level = 1)
plot(uganda1)
gadm("UGANDA", level = 3)
plot(uganda3)
plot(uganda3, col = "grey")
head(uganda3@data)
library(rgeos)
?gArea
gArea(uganda3, byid = TRUE)
uganda3$area <- gArea(uganda3, byid = TRUE)
head(uganda3@data)
plot(uganda3, col = ifelse(uganda3$area != max(uganda3$area), "grey", "red"))
uganda3 <- uganda3[which(uganda3$area != max(uganda3$area)),]
plot(uganda3)
uganda3 <- uganda3[which(uganda3$area != max(uganda3$area)),]
plot(uganda3)
library(ggmap)
x <- geocode(unique(sort(dat$loc)))
x
table(dat$loc)
x <- geocode(paste0(c("Kajjansi",
"Huen",
"Kampala",
"Soroti"),
", Uganda"))
paste0(c("Kajjansi",
"Huen",
"Kampala",
"Soroti"),
", Uganda")
x <- geocode(paste0(c("Kajjansi",
"Entebbe",
"Kampala",
"Soroti"),
", Uganda"))
x
plot(x = x$lon,
y = x$lat,
col = adjustcolor("darkgreen", alpha.f = 0.6),
pch = 16)
plot(uganda3)
points(x = x$lon,
y = x$lat,
col = adjustcolor("darkgreen", alpha.f = 0.6),
pch = 16)
points(x = x$lon,
y = x$lat,
col = adjustcolor("darkgreen", alpha.f = 0.6),
pch = 16,
cex = 3)
uganda3 <- spTransform(uganda3,  CRS("+init=epsg:4326"))
library(rgdal)
uganda3 <- spTransform(uganda3,  CRS("+init=epsg:4326"))
library(maps)
map("world", add = TRUE)
plot(uganda3)
# Plot other countries around uganda
library(maps)
map("world", add = TRUE)
points(x = x$lon,
y = x$lat,
col = adjustcolor("darkgreen", alpha.f = 0.6),
pch = 16,
cex = 3)
uganda_colors <- adjustcolor(colorRampPalette(c("black", "darkgrey"))(nrow(uganda3)),
alpha.f = 0.7)
plot(uganda3,
col = uganda_colors)
points(x = x$lon,
y = x$lat,
col = adjustcolor("darkgreen", alpha.f = 0.6),
pch = 16,
cex = 3)
plot(uganda3,
col = uganda_colors,
border = NA)
plot(uganda3,
col = uganda_colors,
border = "white")
plot(uganda3,
col = uganda_colors,
border = "white",
lwd = 0.2)
plot(uganda3,
col = uganda_colors,
border = "black",
lwd = 0.2)
points(x[1,c("lon", "lat")], col = "red")
points(x[2,c("lon", "lat")], col = "red")
points(x[3,c("lon", "lat")], col = "red")
points(x[4,c("lon", "lat")], col = "red")
text(x[4,c("lon", "lat")],
col = "red",
labels = "Soroti")
?pch
points(x = x$lon,
y = x$lat,
col = adjustcolor("darkred", alpha.f = 0.8),
pch = 8,
cex = 2)
# Draw these onto the map
points(x = x$lon,
y = x$lat,
col = adjustcolor("darkred", alpha.f = 0.8),
pch = 21,
cex = 2)
setwd('/home/joebrew/Documents/weather/uganda/uganda_weather_first_pass')
getwd()
dir()
setwd('/home/joebrew/Documents/weather/uganda_weather_first_pass')
setwd('weather/uganda')
dat <- read.csv("uganda_weather.csv", stringsAsFactors = FALSE)
setwd('/home/joebrew/Documents/weather/uganda')
# Read in scraped data
dat <- read.csv("uganda_weather.csv", stringsAsFactors = FALSE)
# Clean up
dat$date <- as.Date(dat$date, format = "%Y-%m-%d")
source("visualization_functions.R")
# Plot for each location
for (i in unique(sort(dat$loc))){
# Set up multi-pane graphics
par(mfrow = c(2,2))
# Plot max temperature
plot_temp(loc = i)
# Add minimum temperature
plot_temp(loc = i,
var = "temp_min",
data = dat,
color = "darkgreen",
add_lines = TRUE,
add_rolling_lines = TRUE,
rolling_days = 14,
add = TRUE)
# Add legend
legend(x = "bottomleft",
col = adjustcolor(c("darkred", "darkgreen"), alpha.f = 0.4),
pch = 16,
cex = 0.7,
lty = 1,
legend = c("Max", "Min"),
bty = "n")
title(main = "Temperature")
# Plot precipitation
plot_rain(loc = i)
title(main = "Precipitation")
# Plot cloud cover
plot_clouds(loc = i)
title(main = "Cloud cover")
# Plot humidity
# maximum
plot_temp(loc = i,
var = "humidity_max",
ylim = c(0,100))
# minimum
plot_temp(loc = i,
var = "humidity_min",
data = dat,
color = "darkgreen",
add_lines = TRUE,
add_rolling_lines = TRUE,
rolling_days = 14,
add = TRUE)
# Add title
title(main = "Humidity")
# Add legend
legend(x = "bottomleft",
col = adjustcolor(c("darkred", "darkgreen"), alpha.f = 0.4),
pch = 16,
cex = 0.7,
lty = 1,
legend = c("Max", "Min"),
bty = "n")
# Add title
title(main = i,
outer = TRUE,
line = -1)
}
par(mfrow = c(1,1))
setwd('/home/joebrew/Documents/weather/uganda_weather_first_pass')
source('/home/joebrew/Documents/weather/uganda/gadm.R')
gadm("UGANDA", 3)
# Make lat lon
library(rgdal)
uganda3 <- spTransform(uganda3,  CRS("+init=epsg:4326"))
# Remove the lake by getting rid of the largest area polygon
library(rgeos)
uganda3$area <- gArea(uganda3, byid = TRUE)
uganda3 <- uganda3[which(uganda3$area != max(uganda3$area)),]
# Plot map of Uganda
uganda_colors <- adjustcolor(colorRampPalette(c("black", "darkgrey"))(nrow(uganda3)),
alpha.f = 0.7)
par(mar = c(0,0,0,0))
plot(uganda3,
col = uganda_colors,
lwd = 0.2,
border = NA)
dat <- read.csv("/home/joebrew/Documents/weather/uganda/uganda_weather.csv", stringsAsFactors = FALSE)
# Clean up
dat$date <- as.Date(dat$date, format = "%Y-%m-%d")
source('/home/joebrew/Documents/weather/uganda/visualization_functions.R')
par(mfrow = c(2,2))
# Plot max temperature
plot_temp(loc = "KAMPALA")
# Add minimum temperature
plot_temp(loc = "KAMPALA",
var = "temp_min",
data = dat,
color = "darkgreen",
add_lines = TRUE,
add_rolling_lines = TRUE,
rolling_days = 14,
add = TRUE)
# Add legend
legend(x = "bottomleft",
col = adjustcolor(c("darkred", "darkgreen"), alpha.f = 0.4),
pch = 16,
cex = 0.7,
lty = 1,
legend = c("Max", "Min"),
bty = "n")
title(main = "Temperature")
# Plot precipitation
plot_rain(loc = "KAMPALA")
title(main = "Precipitation")
# Plot cloud cover
plot_clouds(loc = "KAMPALA")
title(main = "Cloud cover")
# Plot humidity
# maximum
plot_temp(loc = "KAMPALA",
var = "humidity_max",
ylim = c(0,100))
# minimum
plot_temp(loc = "KAMPALA",
var = "humidity_min",
data = dat,
color = "darkgreen",
add_lines = TRUE,
add_rolling_lines = TRUE,
rolling_days = 14,
add = TRUE)
# Add title
title(main = "Humidity")
# Add legend
legend(x = "bottomleft",
col = adjustcolor(c("darkred", "darkgreen"), alpha.f = 0.4),
pch = 16,
cex = 0.7,
lty = 1,
legend = c("Max", "Min"),
bty = "n")
# Add title
title(main = "KAMPALA",
outer = TRUE,
line = -1)
@
\end{center}
