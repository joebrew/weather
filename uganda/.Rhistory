version()
version
paste0(version$version.string, " (", version$nickname, ")")
version$os
print(version$arch)
library("Holidays")
install.packages("Holidays")
library(Holidays)
Holidays-package
registerHolidays()
?registerHolidays
holidays(years = 2014)
holidays
holidays(years = 2014, type = "NONE" )
allHolidays()
allHolidays()[1]
listHolidays()
station = "ICENTRAL28"
start_date = Sys.Date() - 365,
start_date = Sys.Date() - 365
end_date = Sys.Date()
airport = TRUE
# Format station name
station <- toupper(gsub(" ", "%20", station))
# Parse date components
start_date <- as.Date(start_date, format = "%Y-%m-%d")
start_day <- as.numeric(format(start_date, "%d"))
start_month <- as.numeric(format(start_date, "%m"))
start_year <- as.numeric(format(start_date, "%Y"))
end_date <- as.Date(end_date, format = "%Y-%m-%d")
end_day <- as.numeric(format(end_date, "%d"))
end_month <- as.numeric(format(end_date, "%m"))
end_year <- as.numeric(format(end_date, "%Y"))
# Define link format for weather stations
if(!airport){
link <- paste0( "http://www.wunderground.com/weatherstation/WXDailyHistory.asp?ID=",
station,
"&day=", start_day,
"&month=", start_month,
"&year=", start_year,
"&dayend=", end_day,
"&monthend=", end_month,
"&yearend=", end_year,
"&graphspan=custom&format=1")
# Read in data from link
link
link
station <- toupper(gsub(" ", "%20", station))
str(end_date)
# Define link format for weather stations
if(!airport){
link <- paste0( "http://www.wunderground.com/weatherstation/WXDailyHistory.asp?ID=",
station,
"&day=", start_day,
"&month=", start_month,
"&year=", start_year,
"&dayend=", end_day,
"&monthend=", end_month,
"&yearend=", end_year,
"&graphspan=custom&format=1")
# Read in data from link
df <- read.csv(link)
#Clean up some html formatting issues
df <- df[which(df$Date != "<br>"),]
# Clean up names (to be compatible with airports)
df$PrecipitationIn <- df$PrecipitationSumIn.br.
df$CloudCover <- NA
df$PrecipitationSumIn.br. <- NULL
df <- df[,which(!grepl("WindSpeed|Gust", names(df)))]
} else {
# Define link format for airports
link <- paste0("http://www.wunderground.com/history/airport/",
station,
"/", start_year,
"/", start_month,
"/", start_day,
"/CustomHistory.html?dayend=", end_day,
"&monthend=", end_month,
"&yearend=", end_year,
"&req_city=NA&req_state=NA&req_statename=NA&format=1")
# Read in data from link
df <- read.csv(link)
# Clean up some column names (to be compatible with weather stations)
Date <- df$EAT ; df$EAT <- NULL
df$MeanSeaLevelPressureIn <- NULL
df <- cbind(Date, df)
names(df) <- gsub("[.]", "", names(df))
df <- df[,which(!grepl("Visibility|Wind|Gust|MeanSeaLevelPressureIn|Events", names(df)))]
}
link
station = "KAMPALA"
start_date = Sys.Date() - 365
end_date = Sys.Date()
airport = TRUE
# Format station name
station <- toupper(gsub(" ", "%20", station))
# Parse date components
start_date <- as.Date(start_date, format = "%Y-%m-%d")
start_day <- as.numeric(format(start_date, "%d"))
start_month <- as.numeric(format(start_date, "%m"))
start_year <- as.numeric(format(start_date, "%Y"))
end_date <- as.Date(end_date, format = "%Y-%m-%d")
end_day <- as.numeric(format(end_date, "%d"))
end_month <- as.numeric(format(end_date, "%m"))
end_year <- as.numeric(format(end_date, "%Y"))
link <- paste0( "http://www.wunderground.com/weatherstation/WXDailyHistory.asp?ID=",
station,
"&day=", start_day,
"&month=", start_month,
"&year=", start_year,
"&dayend=", end_day,
"&monthend=", end_month,
"&yearend=", end_year,
"&graphspan=custom&format=1")
# Read in data from link
df <- read.csv(link)
#Clean up some html formatting issues
df <- df[which(df$Date != "<br>"),]
# Clean up names (to be compatible with airports)
df$PrecipitationIn <- df$PrecipitationSumIn.br.
df$CloudCover <- NA
df$PrecipitationSumIn.br. <- NULL
df <- df[,which(!grepl("WindSpeed|Gust", names(df)))]
link
get_weather <- function(station = "KAMPALA", # IWESTERN307
start_date = Sys.Date() - 365,
end_date = Sys.Date(),
airport = TRUE){
# Format station name
station <- toupper(gsub(" ", "%20", station))
# Parse date components
start_date <- as.Date(start_date, format = "%Y-%m-%d")
start_day <- as.numeric(format(start_date, "%d"))
start_month <- as.numeric(format(start_date, "%m"))
start_year <- as.numeric(format(start_date, "%Y"))
end_date <- as.Date(end_date, format = "%Y-%m-%d")
end_day <- as.numeric(format(end_date, "%d"))
end_month <- as.numeric(format(end_date, "%m"))
end_year <- as.numeric(format(end_date, "%Y"))
# Define link format for weather stations
if(!airport){
link <- paste0( "http://www.wunderground.com/weatherstation/WXDailyHistory.asp?ID=",
station,
"&day=", start_day,
"&month=", start_month,
"&year=", start_year,
"&dayend=", end_day,
"&monthend=", end_month,
"&yearend=", end_year,
"&graphspan=custom&format=1")
# Read in data from link
df <- read.csv(link)
#Clean up some html formatting issues
df <- df[which(df$Date != "<br>"),]
# Clean up names (to be compatible with airports)
df$PrecipitationIn <- df$PrecipitationSumIn.br.
df$CloudCover <- NA
df$PrecipitationSumIn.br. <- NULL
df <- df[,which(!grepl("WindSpeed|Gust", names(df)))]
} else {
# Define link format for airports
link <- paste0("http://www.wunderground.com/history/airport/",
station,
"/", start_year,
"/", start_month,
"/", start_day,
"/CustomHistory.html?dayend=", end_day,
"&monthend=", end_month,
"&yearend=", end_year,
"&req_city=NA&req_state=NA&req_statename=NA&format=1")
# Read in data from link
df <- read.csv(link)
# Clean up some column names (to be compatible with weather stations)
Date <- df$EAT ; df$EAT <- NULL
df$MeanSeaLevelPressureIn <- NULL
df <- cbind(Date, df)
names(df) <- gsub("[.]", "", names(df))
df <- df[,which(!grepl("Visibility|Wind|Gust|MeanSeaLevelPressureIn|Events", names(df)))]
}
# Format date to date object
#df$Date <- as.Date(df$Date, format = "%Y-%m-%d")
# Standardize names
names(df) <- c("date",
"temp_max",
"temp_mean",
"temp_min",
"dewpoint_max",
"dewpoint_mean",
"dewpoint_min",
"humidity_max",
"humidity_mean",
"humidity_min",
"pressure_max",
"pressure_min",
"precipitation",
"cloud_cover")
# Add a location column
df$loc <- toupper(as.character(station))
return(df)
}
# # Airport example:
# airpor
airport <- get_weather("HUEN", airport = TRUE)
setwd('weather/uganda')
get_weather <- function(station = "KAMPALA", # IWESTERN307
start_date = Sys.Date() - 365,
end_date = Sys.Date(),
airport = TRUE){
# Format station name
station <- toupper(gsub(" ", "%20", station))
# Parse date components
start_date <- as.Date(start_date, format = "%Y-%m-%d")
start_day <- as.numeric(format(start_date, "%d"))
start_month <- as.numeric(format(start_date, "%m"))
start_year <- as.numeric(format(start_date, "%Y"))
end_date <- as.Date(end_date, format = "%Y-%m-%d")
end_day <- as.numeric(format(end_date, "%d"))
end_month <- as.numeric(format(end_date, "%m"))
end_year <- as.numeric(format(end_date, "%Y"))
# Define link format for weather stations
if(!airport){
link <- paste0( "http://www.wunderground.com/weatherstation/WXDailyHistory.asp?ID=",
station,
"&day=", start_day,
"&month=", start_month,
"&year=", start_year,
"&dayend=", end_day,
"&monthend=", end_month,
"&yearend=", end_year,
"&graphspan=custom&format=1")
# Read in data from link
df <- read.csv(link)
#Clean up some html formatting issues
df <- df[which(df$Date != "<br>"),]
# Clean up names (to be compatible with airports)
df$PrecipitationIn <- df$PrecipitationSumIn.br.
df$CloudCover <- NA
df$PrecipitationSumIn.br. <- NULL
df <- df[,which(!grepl("WindSpeed|Gust", names(df)))]
} else {
# Define link format for airports
link <- paste0("http://www.wunderground.com/history/airport/",
station,
"/", start_year,
"/", start_month,
"/", start_day,
"/CustomHistory.html?dayend=", end_day,
"&monthend=", end_month,
"&yearend=", end_year,
"&req_city=NA&req_state=NA&req_statename=NA&format=1")
# Read in data from link
df <- read.csv(link)
# Clean up some column names (to be compatible with weather stations)
Date <- df$EAT ; df$EAT <- NULL
df$MeanSeaLevelPressureIn <- NULL
df <- cbind(Date, df)
names(df) <- gsub("[.]", "", names(df))
df <- df[,which(!grepl("Visibility|Wind|Gust|MeanSeaLevelPressureIn|Events", names(df)))]
}
# Format date to date object
#df$Date <- as.Date(df$Date, format = "%Y-%m-%d")
# Standardize names
names(df) <- c("date",
"temp_max",
"temp_mean",
"temp_min",
"dewpoint_max",
"dewpoint_mean",
"dewpoint_min",
"humidity_max",
"humidity_mean",
"humidity_min",
"pressure_max",
"pressure_min",
"precipitation",
"cloud_cover")
# Add a location column
df$loc <- toupper(as.character(station))
# print url source
print(link)
return(df)
}
get_weather("HUEN", airport = TRUE)
airport <- get_weather("HUEN", airport = TRUE)
